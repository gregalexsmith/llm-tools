// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./db.sqlite"
}

model User {
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  agents    Agent[]
  threads   Thread[]
  actions   Action[]
  deviceTokens DeviceToken[]
}

model Agent {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  name         String
  systemPrompt String
  modelType        String

  createdBy    User     @relation(fields: [createdById], references: [id])
  createdById  String
  actions      Action[]
  threads      Thread[]
}

model Thread {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  name        String

  agent       Agent     @relation(fields: [agentId], references: [id])
  agentId     Int
  createdBy   User      @relation(fields: [createdById], references: [id])
  createdById String
  actions     Action[]
  messages    Message[]
}

model Message {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  text       String
  senderType String
  read       Boolean  @default(false)

  thread     Thread   @relation(fields: [threadId], references: [id])
  threadId   Int
}

model Action {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name         String
  instructions String
  cron         String

  createdBy   User   @relation(fields: [createdById], references: [id])
  createdById String
  agent       Agent  @relation(fields: [agentId], references: [id])
  agentId     Int
  thread      Thread @relation(fields: [threadId], references: [id])
  threadId    Int
}

model DeviceToken {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User     @relation(fields: [userId], references: [id])
  userId    String

  token     String
  type      String  
  origin    String
}

